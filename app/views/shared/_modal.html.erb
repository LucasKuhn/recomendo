<!-- Modal -->
<% post = Post.new %>

<!-- Category Select -->
<div class="modal fade" id="new-post-category" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">
          O que você recomenda?
        </h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="row row-cols-2">

        <% Category.all.each do |category| %>
        <div class="col my-2">
          <%= link_to "#", class: "btn btn-lg btn-light btn-outline-secondary w-100 border-radius-1", data: {dismiss: 'modal', toggle: 'modal', target: '#new-post-modal', category_id: category.id, category_name: category.name_with_icon } do %>
            <%= category.icon %> <br>
            <%= category.name %>
          <% end %>
        </div>
        <% end %>
      </div>

      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="new-post-modal" tabindex="-1" role="dialog" aria-labelledby="new-post-modalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="new-post-modalLabel">+ Nova Recomendação</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>

      <%= form_for post do |f| %>

      <div class="modal-body">

        <div class="form-group required">
          <%= f.label :title, "Título" %>
          <%= f.text_field :title, class:"form-control", placeholder:"", required: true %>
        </div>

        <div class="form-group">
          <%= f.label :tag_ids, "Tags" %>
          <%= f.text_field :tag_list, value: f.object.tag_list.join(","), data:{role:"tagsinput"} %>
        </div>

        <div class="row row row-cols-1 row-cols-md-2 d-none">
          <div class="col">
            <div class="form-group">
              <%= f.label :category_id, "Categoria" %>
              <%= f.select :category_id, categories_for_select, { include_blank:"" }, { class:'form-control' } %>
            </div>
          </div>
        </div>

        <div class="form-group">
          <%= f.label :url, "Link" %>
          <%= f.text_field :url, class:"form-control", placeholder:"" %>
          <small>
          <div class="card d-none mx-2" id="url-preview">
            <div class="row no-gutters">
              <div class="col-md-3">
                <img src="" class="card-img w-100 h-100" id="url-image" style="object-fit: cover">
              </div>
              <div class="col-md-9">
                <div class="card-body p-1">
                  <h5 class="card-title" id="url-title"></h5>
                  <p class="card-text" id="url-description"></p>
                </div>
              </div>
            </div>
          </div>
          </small>
        </div>

        <div class="form-group">
          <%= f.label :body, "Descrição" %>
          <%= f.text_area :body, class:"form-control", placeholder:"" %>
        </div>

      </div>
      <div class="modal-footer justify-content-center">
        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal" id="cancel-modal">Cancelar</button>
        <%= f.submit "Publicar", class:"btn btn-primary" %>
      </div>

      <% end %>
    </div>
  </div>
</div>

<script>
// Get Metadata from URL

const input = document.getElementById('post_url');
const function_url = "https://383j3ff4ze.execute-api.sa-east-1.amazonaws.com/default/getUrlMetadata?url="

input.addEventListener('keyup', function (e) {
  url = input.value;
  if ( isValidHttpUrl(url) ) {
    $("#url-preview").parent().append(spinner)
    fetch(function_url + url)
    .then(response => response.json())
    .then(json => showUrlCard(json))
  } else {
    $("#url-preview").addClass('d-none')
  }
});

function showUrlCard(json) {
  document.getElementById("url-title").innerText = json.title
  document.getElementById("url-description").innerText = json.description
  document.getElementById("url-image").src = json.image
  $(".spinner").remove()
  $("#url-preview").removeClass('d-none')
}

function isValidHttpUrl(string) {
  let url;
  try {
    url = new URL(string);
  } catch (_) {
    return false;
  }
  return url.protocol === "http:" || url.protocol === "https:";
}

var card = `
<div class="row no-gutters">
  <div class="col-md-3">
    <img src="" class="card-img w-100 h-100" id="url-image" style="object-fit: cover">
  </div>
  <div class="col-md-9">
    <div class="card-body p-1">
      <h5 class="card-title" id="url-title"></h5>
      <p class="card-text" id="url-description"></p>
    </div>
  </div>
</div>
`
var spinner = `
<div class="text-center my-2 text-primary spinner" style="opacity:0.2">
  <div class="spinner-border" role="status">
    <span class="sr-only">Loading...</span>
  </div>
</div>
`

// input.addEventListener('keyup', function (e) {
//     clearTimeout(timeout);
//     timeout = setTimeout(function () {
//       url = input.value;
//       console.log('Value:', url);
//       if ( validURL(url) ) {
//         fetch(function_url + url)
//         .then(response => response.json())
//         .then(json => console.log(json))
//       }
//     }, 400);
// });



function validURL(str) {
  var pattern = new RegExp('^(https?:\\/\\/)?'+ // protocol
  '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|'+ // domain name
  '((\\d{1,3}\\.){3}\\d{1,3}))'+ // OR ip (v4) address
  '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*'+ // port and path
  '(\\?[;&a-z\\d%_.~+=-]*)?'+ // query string
  '(\\#[-a-z\\d_]*)?$','i'); // fragment locator
  return !!pattern.test(str);
}
</script>
<script>
document.addEventListener('turbolinks:load', function(){
  $('#cancel-modal').on('click', function () {
      $(this).closest('form').trigger('reset');
  })
});

$('#new-post-modal').on('show.bs.modal', function (event) {
  var button = $(event.relatedTarget) // Button that triggered the modal
  var category_id = button.data('category-id') // Extract info from data-* attributes
  var category_name = button.data('category-name') // Extract info from data-* attributes
  switch(category_name.toLowerCase().replace(/[^a-z]/g, '')) {
    case 'filme':
    tags = 'suspense, drama'
    break;
    case 'livro':
    tags = 'romance, poesia'
    break;
    case 'seriado':
    tags = 'netflix, AppleTV'
    break;
    case 'podcast':
    tags = 'spotify, entrevista'
    break;
    case 'video':
    tags = 'youtube, ted'
    break;
    default:
    tags = ''
  }
  $('.bootstrap-tagsinput input').attr('placeholder', tags);
  $('.bootstrap-tagsinput input').focus(function(){
    $(this).removeAttr('placeholder');
  });
  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
  var modal = $(this)
  modal.find('select').val(category_id)
  modal.find('.modal-title').text(category_name)
  // modal.find('.modal-body input').val(recipient)
})
</script>

<script>
// Auto Grow text area
// https://gomakethings.com/automatically-expand-a-textarea-as-the-user-types-using-vanilla-javascript/
var autoExpand = function (field) {

	// Reset field height
	field.style.height = 'inherit';

	// Get the computed styles for the element
	var computed = window.getComputedStyle(field);

	// Calculate the height
	var height = parseInt(computed.getPropertyValue('border-top-width'), 10)
	             + parseInt(computed.getPropertyValue('padding-top'), 10)
	             + field.scrollHeight
	             + parseInt(computed.getPropertyValue('padding-bottom'), 10)
	             + parseInt(computed.getPropertyValue('border-bottom-width'), 10);

	field.style.height = height + 'px';

};

document.addEventListener('input', function (event) {
	if (event.target.tagName.toLowerCase() !== 'textarea') return;
	autoExpand(event.target);
}, false);
</script>

<script>
// Fix multiple modal Bootstrap bug
// https://stackoverflow.com/questions/28077066/bootstrap-modal-issue-scrolling-gets-disabled

$('body').on('hidden.bs.modal', function () {
if($('.modal.show').length > 0)
{
    $('body').addClass('modal-open');
}
});
</script>
